scalar JSON

type Collection {
  id: String!
  names: JSON!
}

input CollectionInput {
  names: JSON!
}

type Category {
  id: String!
  names: JSON!
}

input CategoryInput {
  names: JSON!
}

type Design {
  id: String!
  names: JSON!
  categoryIds: [String!]!
  description: JSON!
  details: JSON!
}

input DesignInput {
  names: JSON!
  categoryIds: [String!]!
  description: JSON!
  details: JSON!
}

type Piece {
  id: String!
  serialNumber: Int!
  designId: String!
  imageFileNames: [String!]!
  collectionId: String
}

input PieceInput {
  designId: String!
  imageFileNames: [String!]!
  collectionId: String
}

type ProductsData {
  collections: [Collection!]!
  categories: [Category!]!
  designs: [Design!]!
  pieces: [Piece!]!
}

extend type Query {
  allProducts: ProductsData!
}

extend type Mutation {
  createCollection(input: CollectionInput!): Collection
  createCategory(input: CategoryInput!): Category
  createDesign(input: DesignInput!): Design
  createPiece(input: PieceInput!): Piece

  updateCollection(id: String!, input: CollectionInput!): Collection
  updateCategory(id: String!, input: CategoryInput!): Category
  updateDesign(id: String!, input: DesignInput!): Design
  updatePiece(id: String!, input: PieceInput!): Piece
}
